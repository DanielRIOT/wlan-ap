From c4e892197516d35a6f8043cfa6c7a3b8353271fc Mon Sep 17 00:00:00 2001
From: Arif Alam <arif.alam@netexperience.com>
Date: Thu, 28 Oct 2021 16:28:30 -0400
Subject: [PATCH] netifd: remove fallthrough

---
 .../network/config/netifd/patches/test.patch  | 66 +++++++++++++++++++
 1 file changed, 66 insertions(+)
 create mode 100644 package/network/config/netifd/patches/test.patch

diff --git a/package/network/config/netifd/patches/test.patch b/package/network/config/netifd/patches/test.patch
new file mode 100644
index 0000000000..c13dc28340
--- /dev/null
+++ b/package/network/config/netifd/patches/test.patch
@@ -0,0 +1,66 @@
+--- a/bonding.c
++++ b/bonding.c
+@@ -280,7 +280,6 @@ bonding_port_cb(struct device_user *dep,
+ 
+ 		if (bdev->n_present == 1)
+ 			device_set_present(&bdev->dev, true);
+-		fallthrough;
+ 	case DEV_EVENT_AUTH_UP:
+ 		if (!bdev->dev.active)
+ 			break;
+--- a/bridge.c
++++ b/bridge.c
+@@ -571,7 +571,6 @@ bridge_member_cb(struct device_user *dep
+ 
+ 		if (bst->n_present == 1)
+ 			device_set_present(&bst->dev, true);
+-		fallthrough;
+ 	case DEV_EVENT_AUTH_UP:
+ 		if (!bst->dev.active)
+ 			break;
+--- a/interface.c
++++ b/interface.c
+@@ -262,7 +262,6 @@ interface_event(struct interface *iface,
+ 	case IFEV_UP:
+ 		interface_error_flush(iface);
+ 		adev = iface->l3_dev.dev;
+-		fallthrough;
+ 	case IFEV_DOWN:
+ 	case IFEV_UP_FAILED:
+ 		alias_notify_device(iface->name, adev);
+--- a/proto-shell.c
++++ b/proto-shell.c
+@@ -208,7 +208,6 @@ proto_shell_handler(struct interface_pro
+ 				return 0;
+ 			}
+ 		/* if no script task is running */
+-		fallthrough;
+ 		case S_IDLE:
+ 			action = "teardown";
+ 			state->renew_pending = false;
+@@ -292,7 +291,6 @@ proto_shell_task_finish(struct proto_she
+ 	case S_IDLE:
+ 		if (task == &state->proto_task)
+ 			state->proto.proto_event(&state->proto, IFPEV_LINK_LOST);
+-		fallthrough;
+ 	case S_SETUP:
+ 		if (task == &state->proto_task)
+ 			proto_shell_handler(&state->proto, PROTO_CMD_TEARDOWN,
+@@ -764,7 +762,6 @@ proto_shell_setup_failed(struct proto_sh
+ 	switch (state->sm) {
+ 	case S_IDLE:
+ 		state->proto.proto_event(&state->proto, IFPEV_LINK_LOST);
+-		fallthrough;
+ 	case S_SETUP:
+ 		proto_shell_handler(&state->proto, PROTO_CMD_TEARDOWN, false);
+ 		break;
+--- a/wireless.c
++++ b/wireless.c
+@@ -506,7 +506,6 @@ wdev_handle_config_change(struct wireles
+ 	case IFC_RELOAD:
+ 		wdev->retry = WIRELESS_SETUP_RETRY;
+ 		wdev->retry_setup_failed = false;
+-		fallthrough;
+ 	case IFC_NORMAL:
+ 		__wireless_device_set_up(wdev, 0);
+ 
-- 
2.25.1

