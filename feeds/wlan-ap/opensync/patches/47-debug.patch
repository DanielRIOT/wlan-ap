--- a/src/sm/src/sm_scan_schedule.c
+++ b/src/sm/src/sm_scan_schedule.c
@@ -130,49 +130,56 @@ bool sm_scan_schedule_cb (
 {
     bool                            rc;
     sm_scan_ctx_t                  *scan_ctx = NULL;
+    sm_scan_ctx_t                  *scan_ctx_list = NULL;
 
     scan_schedule_timeout_timer_set(&g_scan_schedule_timer, false);
 
     /* Get pending scan */
     if (!ctx) {
         LOG(ERR,
-            "Processing scan schedule (Failed to get context)");
+            "====Processing scan schedule (Failed to get context)");
         return false;
     }
     scan_ctx = (sm_scan_ctx_t *) ctx;
 
 clean:
-    /* Notify upper layer about scan status */
-    if (scan_ctx->scan_request.scan_cb)
-    {
-        scan_ctx->scan_request.scan_cb(scan_ctx->scan_request.scan_ctx, scan_status);
-    }
-
-    // Something went wrong, clean pending requests and exit
-    if (!scan_status) {
-        return sm_scan_schedule_queue_flush();
-    }
-
-    /* Remove processed context */
-    ds_dlist_remove_head(&g_scan_ctx_list);
-    if (scan_ctx) {
-	LOG(DEBUG, "sm_scan_schedule_cb. Scan done. Deleting scan_ctx. %p. %s %s %d\n",
-		scan_ctx,
+	scan_ctx_list = ds_dlist_head(&g_scan_ctx_list);
+	if (scan_ctx && scan_ctx_list && (scan_ctx == scan_ctx_list)) {
+	    /* Notify upper layer about scan status */
+		if (scan_ctx->scan_request.scan_cb) {
+			LOGI("====Calling scan_cb %s scan status %d\n", __func__, scan_status);
+			scan_ctx->scan_request.scan_cb(scan_ctx->scan_request.scan_ctx, scan_status);
+		}
+
+		// Something went wrong, clean pending requests and exit
+		if (!scan_status) {
+	    	LOG(DEBUG, "Scan trigger failed. Flushing the scan request queue. scan_ctx. %p. %s %s %d\n",
+			scan_ctx,
+			radio_get_name_from_type(scan_ctx->scan_request.radio_cfg->type),
+			radio_get_scan_name_from_type(scan_ctx->scan_request.scan_type),
+			scan_ctx->scan_request.chan_list[0]);
+	    	return sm_scan_schedule_queue_flush();
+		}
+
+		/* Remove processed context */
+    	ds_dlist_remove_head(&g_scan_ctx_list);
+    	LOG(DEBUG, "====sm_scan_schedule_cb. Scan done. Deleting scan_ctx. %p. scan_ctx_list %p %s %s %d\n",
+		scan_ctx, scan_ctx_list,
 		radio_get_name_from_type(scan_ctx->scan_request.radio_cfg->type),
 		radio_get_scan_name_from_type(scan_ctx->scan_request.scan_type),
 		scan_ctx->scan_request.chan_list[0]);
-    }
-
-    sm_scan_ctx_free(scan_ctx);
-    scan_ctx = NULL;
-
-    /* Check for waiting scan requests an schedule next in line */
+		sm_scan_ctx_free(scan_ctx);
+		scan_ctx = NULL;
+	} else {
+		LOGI("====SHOULD NOT BE HERE scan_ctx %p\n", scan_ctx);
+	}
+	/* Check for waiting scan requests an schedule next in line */
     scan_ctx = ds_dlist_head(&g_scan_ctx_list);
     if (scan_ctx)
     {
         scan_status = true;
 
-	LOG(DEBUG, "sm_scan_schedule_cb. Schedule next scan request. %p. %s %s %d\n",
+	LOG(DEBUG, "====sm_scan_schedule_cb. Schedule next scan request. %p. %s %s %d\n",
 		scan_ctx,
 		radio_get_name_from_type(scan_ctx->scan_request.radio_cfg->type),
 		radio_get_scan_name_from_type(scan_ctx->scan_request.scan_type),
@@ -205,7 +212,7 @@ void scan_schedule_timeout_cb (EV_P_ ev_
         radio_get_name_from_type(request_ctx->radio_cfg->type),
         radio_get_scan_name_from_type(request_ctx->scan_type),
         request_ctx->chan_list[0]);
-
+    LOGI("====Calling sm_scan_schedule_stop from %s scan type %d\n", __func__, request_ctx->scan_type);
     sm_scan_schedule_stop(
             request_ctx->radio_cfg,
             request_ctx->scan_type);
@@ -219,8 +226,8 @@ bool sm_scan_schedule_process(
     sm_scan_request_t              *request_ctx =
         &scan_ctx->scan_request;
 
-    LOG(TRACE,
-        "Scheduled %s %s %d scan",
+    LOG(DEBUG,
+        "====Scheduled scan_ctx %p %s %s %d scan",scan_ctx,
         radio_get_name_from_type(request_ctx->radio_cfg->type),
         radio_get_scan_name_from_type(request_ctx->scan_type),
         request_ctx->chan_list[0]);
@@ -246,7 +253,7 @@ bool sm_scan_schedule_process(
                 scan_ctx);
     if (true != rc) {
         LOG(DEBUG,
-            "Scheduling %s %s %d scan",
+            "=====Scheduling scan %s %s %d scan failed",
             radio_get_name_from_type(request_ctx->radio_cfg->type),
             radio_get_scan_name_from_type(request_ctx->scan_type),
             request_ctx->chan_list[0]);
--- a/src/sm/src/sm_neighbor_report.c
+++ b/src/sm/src/sm_neighbor_report.c
@@ -1066,6 +1066,7 @@ bool sm_neighbor_stats_process (
     }
 
     /* Stop any target scan processing */
+    LOG(INFO, "=====Calling sm_scan_schedule_stop %s\n", __func__);
     sm_scan_schedule_stop(radio_cfg, scan_type);
 
     if (request_ctx->reporting_interval) {
--- a/src/sm/src/sm_survey_report.c
+++ b/src/sm/src/sm_survey_report.c
@@ -848,6 +848,7 @@ void sm_survey_scan_cb(
 
     /* Scan error occurred, skip records and retry */
     if (!scan_status) {
+    	LOGI("===Invalid scan status %s \n", __func__);
         LOGE("Processing %s %s %d survey report "
              "(Failed to scan)",
              radio_get_name_from_cfg(radio_cfg_ctx),
@@ -867,6 +868,7 @@ void sm_survey_scan_cb(
             scan_status);
 
     /* Fetch latest survey records */
+    LOGI("=====Calling target_stats_survey_get from %s scan type %d\n", __func__, scan_type);
     rc =
         target_stats_survey_get (
                 radio_cfg_ctx,
@@ -1741,6 +1743,7 @@ bool sm_survey_stats_process (
     }
 
     /* Stop any target scan Processing */
+    LOGI("====Calling sm_scan_schedule_stop from %s scan type %d\n", __func__, scan_type);
     sm_scan_schedule_stop(radio_cfg, scan_type);
 
     if (request_ctx->reporting_interval) {
