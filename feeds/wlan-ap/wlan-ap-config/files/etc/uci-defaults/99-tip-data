#!/bin/sh

. /lib/functions.sh

SKU="unknown"
MODEL=""
PLATFORM="unknown"
SERIAL=""
MODEL_REV="unknown"
MODEL_DESCR="unknown"
MANUF_NAME="unknown"
MANUF_DATE="unknown"
MANUF_URL="unknown"
MANUF_DESIGN="unknown"
REF_DESIGN="unknown"
CERT_REGION="unknown"
ID=""

case "$(board_name)" in
edgecore,ecw5211|\
edgecore,ecw5410)
	PLATFORM=$(cat /tmp/sysinfo/model)
	SERIAL=$(cat /dev/mtd5 | grep serial_number | cut -d "=" -f2)
	MODEL=$(cat /dev/mtd5 | grep "model=" | cut -d "=" -f2)
	if [ ! $MODEL ]; then
		MODEL=$(cat /tmp/sysinfo/board_name | sed "s/edgecore,//" | tr [a-z] [A-Z])
	fi
	SKU=$(cat /dev/mtd5 | grep sku | cut -d "=" -f2)
	CERT_REGION=$(cat /dev/mtd5 | grep certification_region | cut -d "=" -f2)
	ID=$(cat /dev/mtd5 | grep mac_address | cut -d "=" -f2)
	MANUF_DATE=$(cat /dev/mtd5 | grep manufacturer_date | cut -d "=" -f2)
	MANUF_NAME=$(cat /dev/mtd5 | grep manufacturer_name | cut -d "=" -f2)
	if [ ! $MANUF_NAME ]; then
		MANUF_NAME="Edge-Core"
	fi
	MANUF_ABBR="EC"
	MANUF_URL=$(cat /dev/mtd5 | grep manufacturer_url | cut -d "=" -f2)
	MODEL_DESCR=$(cat /dev/mtd5 | grep model_description | cut -d "=" -f2)
	MODEL_REV=$(cat /dev/mtd5 | grep model_revision | cut -d "=" -f2)
	REF_DESIGN=$(cat /dev/mtd5 | grep reference_design | cut -d "=" -f2)
	;;
cig,wf194c)
	PLATFORM=$(cat /tmp/sysinfo/model)
	SERIAL=$(cat /dev/mtd14 | grep serial_number | cut -d "=" -f2)
	if [ ! $SERIAL ]; then
		SERIAL=$(cat /dev/mtd14 | grep BaseMacAddress | cut -dx -f2)
	fi
	MODEL=$(cat /dev/mtd14 | grep "model=" | cut -d "=" -f2)
	SKU=$(cat /dev/mtd14 | grep sku | cut -d "=" -f2)
	CERT_REGION=$(cat /dev/mtd14 | grep certification_region | cut -d "=" -f2)
	ID=$(cat /dev/mtd14 | grep mac_address | cut -d "=" -f2)
	MANUF_DATE=$(cat /dev/mtd14 | grep manufacturer_date | cut -d "=" -f2)
	MANUF_NAME=$(cat /dev/mtd14 | grep manufacturer_name | cut -d "=" -f2)
	if [ ! $MANUF_NAME ]; then
		MANUF_NAME="CIG"
	fi
	MANUF_ABBR="CIG"
	MANUF_URL=$(cat /dev/mtd14 | grep manufacturer_url | cut -d "=" -f2)
	MODEL_DESCR=$(cat /dev/mtd14 | grep model_description | cut -d "=" -f2)
	MODEL_REV=$(cat /dev/mtd14 | grep model_revision | cut -d "=" -f2)
	REF_DESIGN=$(cat /dev/mtd14 | grep reference_design | cut -d "=" -f2)
	;;
cig,wf188n)
	PLATFORM=$(cat /tmp/sysinfo/model)
	SERIAL=$(cat /dev/mtd12 | grep serial_number | cut -d "=" -f2)
	MODEL=$(cat /dev/mtd12 | grep "model=" | cut -d "=" -f2)
	SKU=$(cat /dev/mtd12 | grep sku | cut -d "=" -f2)
	CERT_REGION=$(cat /dev/mtd12 | grep certification_region | cut -d "=" -f2)
	ID=$(cat /dev/mtd12 | grep mac_address | cut -d "=" -f2)
	MANUF_DATE=$(cat /dev/mtd12 | grep manufacturer_date | cut -d "=" -f2)
	MANUF_NAME=$(cat /dev/mtd12 | grep manufacturer_name | cut -d "=" -f2)
	if [ ! $MANUF_NAME ]; then
		MANUF_NAME="CIG"
	fi
	MANUF_ABBR="CIG"
	MANUF_URL=$(cat /dev/mtd12 | grep manufacturer_url | cut -d "=" -f2)
	MODEL_DESCR=$(cat /dev/mtd12 | grep model_description | cut -d "=" -f2)
	MODEL_REV=$(cat /dev/mtd12 | grep model_revision | cut -d "=" -f2)
	REF_DESIGN=$(cat /dev/mtd12 | grep reference_design | cut -d "=" -f2)
	;;
linksys,ea8300)
	MODEL=$(grep modelNumber= /dev/mtd9 | tr -d '\r\n' | sed "s/modelNumber=//")
	SERIAL=$(grep serial_number= /dev/mtd9 | tr -d '\r\n' | sed "s/serial_number=//")
	PLATFORM="OPENWRT_EA8300"
	MODEL_REV=$(cat /dev/mtd9 | grep hw_revision | cut -d "=" -f2 | tr -d '\r\n')
	MODEL_DESCR=$(cat /dev/mtd9 | grep modelDescription | cut -d "=" -f2 | tr -d '\r\n')
	MANUF_URL=$(cat /dev/mtd9 | grep manufacturerURL | cut -d "=" -f2 | tr -d '\r\n')
	CERT_REGION=$(cat /dev/mtd9 | grep cert_region | cut -d "=" -f2 | tr -d '\r\n')
	# Commenting out below, because hw_mac_addr is used for eth0/LAN interface
	# whereas ID corresponds to the mac address of WAN interface.
	#ID=$(cat /dev/mtd9 | grep hw_mac_addr | cut -d "=" -f2 | tr -d '\r\n')
	MANUF_NAME=$(cat /dev/mtd9 | grep "manufacturer=" | cut -d "=" -f2 | tr -d '\r\n')
	if [ ! $MANUF_NAME ]; then
		MANUF_NAME="Linksys"
	fi
	MANUF_ABBR="LS"

	MANUF_DATE=$(cat /dev/mtd9 | grep manufacturer_date | cut -d "=" -f2 | tr -d '\r\n')
	YEAR=$(echo "$MANUF_DATE" | cut -d "/" -f1)
	MONTH=$(echo "$MANUF_DATE" | cut -d "/" -f2)
	DAY=$(echo "$MANUF_DATE" | cut -d "/" -f3)
	MANUF_DATE="$DAY-$MONTH-$YEAR"
	;;
tp-link,ec420-g1|\
tplink,ex227|\
tplink,ex447)
	PLATFORM=$(cat /tmp/sysinfo/model)
	MANUF_ABBR="PW"
	# tp-link device manufacturing data and certs are stored in product_info partition
	tip_part=$(find_mtd_part "product_info" 2> /dev/null)
	mkdir -p /tmp/.tip
	if mount -t squashfs $tip_part /tmp/.tip &> /dev/null; then
		SERIAL=$(cat /tmp/.tip/serial_number)
		MODEL=$(cat /tmp/.tip/model)
		SKU=$(cat /tmp/.tip/sku)
		CERT_REGION=$(cat /tmp/.tip/certification_region)
		ID=$(cat /tmp/.tip/mac_address)
		MANUF_DATE=$(cat /tmp/.tip/manufacturer_date)
		MANUF_NAME=$(cat /tmp/.tip/manufacturer_name)
		MANUF_URL=$(cat /tmp/.tip/manufacturer_url)
		MODEL_DESCR=$(cat /tmp/.tip/model_description)
		MODEL_REV=$(cat /tmp/.tip/model_revision)
		REF_DESIGN=$(cat /tmp/.tip/reference_design)
		if [ -f /tmp/.tip/certs/ca.pem ] && [ -f /tmp/.tip/certs/client.pem ] && [ -f /tmp/.tip/certs/client_dec.key ]; then
			# If certs are default certs, and they will be replaced by manufacturing certs.
			if cmp /usr/opensync/certs/ca.pem /rom/usr/opensync/certs/ca.pem &> /dev/null || \
			   cmp /usr/opensync/certs/client.pem /rom/usr/opensync/certs/client.pem &> /dev/null || \
			   cmp /usr/opensync/certs/client_dec.key /rom/usr/opensync/certs/client_dec.key &> /dev/null; then
				cp /tmp/.tip/certs/* /usr/opensync/certs/
			fi
		fi
		umount -l /tmp/.tip &> /dev/null

	# for EC420-G1 DVT sample
	elif [ $(board_name) = "tp-link,ec420-g1" ]; then
		SERIAL=$(cat /dev/mtd9 | grep serial_number | cut -d "=" -f2)
		MODEL=$(cat /dev/mtd9 | grep "model=" | cut -d "=" -f2)
		SKU=$(cat /dev/mtd9 | grep sku | cut -d "=" -f2)
		CERT_REGION=$(cat /dev/mtd9 | grep certification_region | cut -d "=" -f2)
		ID=$(cat /dev/mtd9 | grep mac_address | cut -d "=" -f2)
		MANUF_DATE=$(cat /dev/mtd9 | grep manufacturer_date | cut -d "=" -f2)
		MANUF_NAME=$(cat /dev/mtd9 | grep manufacturer_name | cut -d "=" -f2)
		if [ ! $MANUF_NAME ]; then
			MANUF_NAME="Proware (TP-Link)"
		fi
		MANUF_URL=$(cat /dev/mtd9 | grep manufacturer_url | cut -d "=" -f2)
		MODEL_DESCR=$(cat /dev/mtd9 | grep model_description | cut -d "=" -f2)
		MODEL_REV=$(cat /dev/mtd9 | grep model_revision | cut -d "=" -f2)
		REF_DESIGN=$(cat /dev/mtd9 | grep reference_design | cut -d "=" -f2)
	else
		MODEL=$(cat /tmp/sysinfo/board_name)
		SERIAL=$(cat /sys/class/net/eth0/address | tr -d :)
	fi
	;;
*)
	MODEL=$(cat /tmp/sysinfo/board_name)
	SERIAL=$(cat /sys/class/net/eth0/address | tr -d :)
	PLATFORM=$(cat /tmp/sysinfo/model)
	;;
esac

MODEL=$(echo $MODEL | sed "s/.*,//" | tr [a-z] [A-Z])

# fallback check to get the serial number from mac address if flash does not contain this info.
if [ ! $SERIAL ]; then
	SERIAL=$(cat /sys/class/net/eth0/address | tr -d :)
fi

# fallback check to get the id from mac address if flash does not contain this info.
if [ ! $ID ]; then
	if [ $(board_name) == "cig,wf194c" ] || [ $(board_name) == "edgecore,eap102" ] || [ $(board_name) == "linksys,ea8300" ]; then
		ID=$(cat /sys/class/net/eth1/address)
	else
		ID=$(cat /sys/class/net/eth0/address)
	fi
fi

# fallback check to get the model if flash does not contain this info.
if [ ! $MODEL ]; then
	MODEL=$(cat /tmp/sysinfo/board_name | cut -d "," -f2 | awk '{print toupper($0)}')
fi

# Read the active firmware version info
FIRMWARE=$(cat /usr/opensync/.versions | grep FW_IMAGE_ACTIVE | grep -o '[^-]*$')
if [ ! $FIRMWARE ]; then
	FIRMWARE=$(cat /usr/opensync/.versions | grep FW_VERSION | cut -d ":" -f2)
fi

uci set system.tip=tip
uci set system.tip.serial="${SERIAL}"
uci set system.tip.model="${MODEL}"
uci set system.tip.platform="${PLATFORM}"
uci set system.tip.firmware="${FIRMWARE}"
uci set system.tip.sku_number="${SKU}"
uci set system.tip.revision="${MODEL_REV}"
uci set system.tip.model_description="${MODEL_DESCR}"
uci set system.tip.manufacturer_name="${MANUF_NAME}"
uci set system.tip.manufacturer_date="${MANUF_DATE}"
uci set system.tip.manufacturer_url="${MANUF_URL}"
uci set system.tip.reference_design="${REF_DESIGN}"
uci set system.tip.certification_region="${CERT_REGION}"
uci set system.tip.id="${ID}"
uci set system.tip.manuf_abbr="${MANUF_ABBR}"

uci commit
