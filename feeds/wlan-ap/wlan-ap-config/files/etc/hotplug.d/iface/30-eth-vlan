#!/bin/sh
. /usr/share/libubox/jshn.sh
[ "$ACTION" = ifup -o "$ACTION" = ifupdate  -o "$ACTION" = ifdown ] || exit 0

json_init
json_load "$(cat /etc/board.json)"
json_select network
	json_select "wan"
		json_get_vars ifname
	json_select ..
json_select ..

[ -n "$ifname" ] || {
	ifname=$(uci get network.wan.ifname)
	ifname=${ifname%% *}
}

if [ "$ACTION" = ifup -o "$ACTION" = ifupdate ]; then
	trunk=$(uci get network.${INTERFACE}.vlan_trunk)
	if [ "$trunk" = 1 ]; then
		net=$(uci get network.${INTERFACE}.ifname)
		allowed_vlans=$(uci get network.${INTERFACE}.allowed_vlans)
		pvid=$(uci get network.${INTERFACE}.pvid)

		[ -z "$allowed_vlans" ] || {
			echo $allowed_vlans > /etc/allowed_vlans_$INTERFACE
			echo $pvid > /etc/pvid_$INTERFACE
			for vid in $allowed_vlans
			do
				bridge vlan add vid $vid dev br-lan self
				bridge vlan add vid $vid dev br-wan self
				bridge vlan add vid $vid dev $ifname
				bridge vlan add vid $vid dev $net
			done
		}
		[ -z "$pvid" ] || {
                        bridge vlan add vid $pvid dev br-lan self
                        bridge vlan add vid $pvid dev br-wan self
                        bridge vlan add vid $pvid dev $ifname
                        bridge vlan add pvid $pvid vid $pvid dev $net untagged
		}
	else
		vid=$(uci get network.${INTERFACE}.vid)
		net=$(uci get network.${INTERFACE}.ifname)

		[ -z "$net" -o -z "$vid" -o "$vid" = 0 ] && exit 0
		ip link add link $ifname name $ifname.$vid type vlan id $vid
		ip link set dev $ifname.$vid up
		brctl addbr vlan-$vid
		brctl addif vlan-$vid $ifname.$vid
		brctl delif br-wan $net
		brctl delif br-lan $net
		brctl addif vlan-$vid $net
		ifconfig vlan-$vid up

		bridge vlan add vid $vid dev br-lan self
		bridge vlan add vid $vid dev br-wan self
		bridge vlan add vid $vid dev $ifname
		bridge vlan add pvid $vid vid $vid dev $net untagged
		exit 0
	fi
else
	if [ "$ACTION" = ifdown ]; then
		vid=`echo $INTERFACE | awk -F "_" '{ print $2 }'`
		net=`echo $INTERFACE | awk -F "_" '{ print $1 }'`
		[ -z "$net" -o -z "$vid" -o "$vid" = 0 ] && exit 0

		if [ $vid  = "trunk" ]; then
			allowed_vlans=`cat /etc/allowed_vlans_$INTERFACE`
			for vid in $allowed_vlans
			do
				bridge vlan del vid $vid dev $net
			done

			pvid=`cat /etc/pvid_$INTERFACE`
			bridge vlan del pvid $pvid vid $pvid dev $net untagged
			bridge vlan add pvid 1 vid 1 dev $net untagged
			rm /etc/allowed_vlans_$INTERFACE
			rm /etc/pvid_$INTERFACE
		else
			bridge vlan del pvid $vid vid $vid dev $net untagged

			bridge vlan add pvid 1 vid 1 dev $net untagged
			brctl delif vlan-$vid $net
		fi
		exit 0
	fi
fi
